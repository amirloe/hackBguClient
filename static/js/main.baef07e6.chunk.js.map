{"version":3,"sources":["zoomate.jpeg","Components/GroupInfo.js","Components/OpenGroupForm.js","Components/MyTextbox.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GroupInfo","props","groups","this","map","group","x","color","groupSize","maxNum","to_absolute","zoomUrl","startsWith","key","id","groupLeader","startTime","Description","href","target","Button","variant","disabled","Table","striped","bordered","hover","React","Component","OpenGroupForm","maxChange","event","setState","value","leaderChange","zoomLinkChange","zoomLink","groupDescriptionChange","description","courseNameChange","courseName","dateChange","date","timeChange","time","submitFunc","setNewRow","state","Form","className","onSubmit","preventDefault","Row","Group","controlId","Label","Control","onChange","placeholder","as","Col","type","toDateString","size","onClick","MyTextbox","show","Alert","style","textAlign","Heading","App","Date","setHours","groupDescription","row","console","log","newRow","rows","concat","alert","showhours","showForm","courses","about","showH","filter","chooseText","buttons","name","class","calendarType","onClickDay","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.baef07e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/zoomate.e431bd55.jpeg\";","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Button from 'react-bootstrap/Button';\r\nclass GroupInfo extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n    }\r\n\r\n    render(){\r\n        \r\n\r\n        var groups = this.props.groups.map(\r\n            (group,x)=>{\r\n                var color = group.groupSize < group.maxNum? 'success' : 'danger'\r\n                var to_absolute = group.zoomUrl.startsWith(\"http\")?group.zoomUrl:\"http://\"+group.zoomUrl\r\n                return <tr key={x}>\r\n                <td>{group.id}</td>\r\n                <td>{group.groupLeader}</td>\r\n                <td>{group.startTime}</td>\r\n                <td>{group.Description}</td>\r\n                <td><a href={to_absolute} target=\"_blank\">Zoom Link</a></td>\r\n                <td><Button variant={color} disabled={group.groupSize >= group.maxNum}>click here</Button></td>\r\n              </tr>\r\n            }\r\n            \r\n        )\r\n        return <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Group Leader</th>\r\n            <th>Time</th>\r\n            <th>Description</th>\r\n            <th>Zoom Url</th>\r\n            <th>Join</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {groups}\r\n        </tbody>\r\n      </Table>\r\n      \r\n      \r\n    }\r\n}\r\n\r\nexport default GroupInfo;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nclass OpenGroupForm extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state={\r\n        maxNum:1,\r\n        groupSize:1,\r\n        groupLeader:\"\",\r\n        zoomLink:\"\",\r\n        description:\"\",\r\n        courseName:this.props.courseName,\r\n        date:this.props.date,\r\n        time:\"\"\r\n      }\r\n    }\r\n\r\n    maxChange = (event)=>{\r\n      this.setState({maxNum:event.target.value})\r\n    }\r\n    leaderChange = (event)=>{\r\n      this.setState({groupLeader:event.target.value})\r\n    }\r\n    zoomLinkChange = (event)=>{\r\n      this.setState({zoomLink:event.target.value})\r\n    }\r\n    groupDescriptionChange = (event)=>{\r\n      this.setState({description:event.target.value})\r\n    }\r\n    courseNameChange = (event)=>{\r\n      this.setState({courseName:event.target.value})\r\n    }\r\n    dateChange = (event)=>{\r\n      this.setState({date:event.target.value})\r\n    }\r\n    timeChange = (event)=>{\r\n      this.setState({time:event.target.value})\r\n    }\r\n    submitFunc=()=>{this.props.setNewRow(this.state.maxNum,this.state.groupLeader,this.state.courseName,this.state.description,\r\n      this.state.zoomLink,this.state.date,this.state.time)\r\n    \r\n    }\r\n\r\n    render(){\r\n            \r\n        return <Form  className onSubmit={(event)=>{event.preventDefault()}}>\r\n        <Form.Row>\r\n\r\n        <Form.Group controlId=\"CourseName\">\r\n          <Form.Label>Course Name</Form.Label>\r\n          <Form.Control value={this.props.courseName} disabled onChange={this.courseNameChange}/>\r\n        </Form.Group> \r\n\r\n        <Form.Group controlId=\"GroupLeader\">\r\n          <Form.Label>Group Leader</Form.Label>\r\n          <Form.Control placeholder=\"Israel Israeli\" onChange={this.leaderChange} />\r\n         </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId=\"ZoomLink\">\r\n            <Form.Label>Zoom Link</Form.Label>\r\n            <Form.Control type=\"link\" placeholder=\"Enter URL\" onChange={this.zoomLinkChange} />\r\n          </Form.Group>\r\n        \r\n        </Form.Row>\r\n            \r\n      \r\n        <Form.Group as={Col} controlId=\"GroupDescription\">\r\n            <Form.Label>Group description</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"what's your group goal? \" onChange={this.groupDescriptionChange} />\r\n          </Form.Group>\r\n\r\n      \r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"Date\">\r\n            <Form.Label>Date</Form.Label>\r\n            <Form.Control value={this.props.date.toDateString()} disabled onChange={this.dateChange}/>\r\n          </Form.Group>\r\n      \r\n          <Form.Group as={Col} controlId=\"MettingStartTime\">\r\n            <Form.Label>Metting Start Time</Form.Label>\r\n            <Form.Control type=\"time\" onChange={this.timeChange}>\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n\r\n        <Form.Group controlId=\"Max participants\">\r\n          <Form.Label>Max participants</Form.Label>\r\n          <Form.Control placeholder=\"99\" onChange={this.maxChange} />\r\n         </Form.Group>\r\n\r\n  \r\n          </Form.Row>\r\n            \r\n        <Button variant=\"info\"  size=\"sm\" type=\"submit\" onClick={this.submitFunc}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n      \r\n    }\r\n}\r\n\r\nexport default OpenGroupForm;","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Alert from 'react-bootstrap/Alert';\r\n// import './App.css';\r\nclass MyTextbox extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      show:true\r\n    }\r\n  }\r\n   \r\n  render(){\r\n    \r\n    return <div>\r\n      <Alert className='center' variant=\"success\" show={this.state.show}  style={{textAlign:'right'}}> \r\n    <Alert.Heading>! Zoomate ברוכים הבאים ל </Alert.Heading>\r\n    <h6>?איך לפתוח קבוצת למידה חדשה </h6>\r\n    <p style={{textAlign:'right'}}>\r\n    לחץ על שם הקורס בו אתה מעוניין לפתוח קבוצה חדשה, בחר תאריך ולחץ על הכפתור\r\n    </p>\r\n    <p>\r\n    .open new group \r\n    </p>\r\n    <p>\r\n    לאחר מכן מלא את הפרטים ולחץ \r\n    </p>\r\n    <p>\r\n    submit\r\n    </p>\r\n    <hr />\r\n    <h6>?איך להצטרף לקבוצת למידה קיימת</h6>\r\n    <p className=\"mb-0\">\r\n      לחץ על שם הקורס בו אתה מעוניין להצטרף לקבוצה קיימת, בחר תאריך ולאחר מכן בחר באחת הקבוצות מתוך הרשימה\r\n    </p>\r\n    <hr />\r\n    \r\n    <p className=\"mb-0\">\r\n    (: בהצלחה\r\n    </p>\r\n\r\n    <div className=\"d-flex justify-content-end\">\r\n            <Button className='bu-5' onClick={() => this.setState({show:false})} variant=\"outline-success\">\r\n              המשך\r\n            </Button>\r\n          </div>\r\n\r\n\r\n          \r\n  </Alert>\r\n  <div  className='helpbox'>\r\n  {!this.state.show && <Button variant='danger' onClick={()=>this.setState({show:true})}>Help</Button>}\r\n  </div>\r\n</div>};\r\n  \r\n}\r\n  export default MyTextbox;","\r\nimport React from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport GroupInfo from './Components/GroupInfo';\r\nimport OpenGroupForm from './Components/OpenGroupForm';\r\nimport MyTextbox from './Components/MyTextbox';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport logo from './zoomate.jpeg';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n  \r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      id:0,\r\n      date: new Date(),\r\n      show:false,\r\n      showhours:false,\r\n      showForm:false,\r\n      courseName:\"\",\r\n      courses:[\"לוגיקה ותורת הקבוצות\",\"אלגברה\",\"חדווא 1\",\"מבוא למדעי המחשב\"],\r\n      rows:[\r\n        {id:69,\r\n          maxNum:10,\r\n          groupSize:5,\r\n          groupLeader:\"Sara\",\r\n          courseName:\"אלגברה\",\r\n          Description:\"תרגיל בית מס 3\",\r\n          startTime:\"12:00\",\r\n          date:new Date(2020,8,22),\r\n          zoomUrl:\"www.zoom.com\"},\r\n          {id:70,\r\n            maxNum:10,\r\n            groupSize:10,\r\n            groupLeader:\"Michal\",\r\n            courseName:\"אלגברה\",\r\n            Description:\"תרגיל בית מס 2\",\r\n            startTime:\"14:00\",\r\n            date:new Date(2020,8,22),\r\n            zoomUrl:\"www.zoom.com\"},\r\n            {id:71,\r\n              maxNum:10,\r\n              groupSize:10,\r\n              groupLeader:\"Michal\",\r\n              courseName:\"לוגיקה ותורת הקבוצות\",\r\n              Description:\"תרגיל בית מס 12\",\r\n              startTime:\"14:00\",\r\n              date:new Date(2020,8,16),\r\n              zoomUrl:\"www.zoom.com\"},\r\n              {id:72,\r\n                maxNum:10,\r\n                groupSize:10,\r\n                groupLeader:\"Michal\",\r\n                courseName:\"חדווא 1\",\r\n                Description:\"תרגיל בית מס 6\",\r\n                startTime:\"14:00\",\r\n                date:new Date(2020,8,16),\r\n                zoomUrl:\"www.zoom.com\"},\r\n                {id:73,\r\n                  maxNum:10,\r\n                  groupSize:10,\r\n                  groupLeader:\"Majeed\",\r\n                  courseName:\"מבוא למדעי המחשב\",\r\n                  Description:\"חזרה על רקורסיות\",\r\n                  startTime:\"14:00\",\r\n                  date:new Date(2020,8,16),\r\n                  zoomUrl:\"www.zoom.com\"},\r\n      ],\r\n      about:false,\r\n    }\r\n\r\n    \r\n  }\r\n\r\n\r\n  \r\n \r\n\r\n  onChange = date => {\r\n    let x = new Date(new Date(date).setHours(6));\r\n    this.setState({ date:x })\r\n  }\r\n\r\n\r\n//3. render the scheduler component, mind that the Scheduler component should be placed in a DragDropContext(father or ancestor).\r\nsetNewRow=(maxNum,groupLeader,courseName,groupDescription,zoomLink,date,time)=>{\r\n  var row={id:this.state.id,\r\n          maxNum:maxNum,\r\n          groupSize:1,\r\n          groupLeader:groupLeader,\r\n          courseName:courseName,\r\n          Description:groupDescription,\r\n          startTime:time,\r\n          date:date,\r\n          zoomUrl:zoomLink}\r\n\r\n console.log(row.Description)\r\n  var newRow=this.state.rows.concat(row)\r\n  alert(\"Group created!\")\r\n   this.setState({rows:newRow,id:this.state.id+1})\r\n   this.setState({ showhours:true , showForm:false})\r\n}\r\n\r\nrender(){\r\n \r\n  const showH =this.state.showhours?\r\n  <div className='mu-2'>\r\n\r\n  <GroupInfo groups={this.state.rows.filter((x)=>(x.date.toDateString()===this.state.date.toDateString())&&(x.courseName===this.state.courseName))}></GroupInfo>\r\n  <Button className='m-4' onClick={()=>{this.setState({showhours:false,showForm:true})}}>Open new Group</Button>\r\n  </div>\r\n: this.state.showForm?\r\n<OpenGroupForm courseName={this.state.courseName} date={this.state.date} setNewRow={this.setNewRow}></OpenGroupForm>\r\n:\r\n<h2></h2>\r\n\r\nvar chooseText = !this.state.showhours && !this.state.showForm ? \" Choose your date (pun intended) ;)\" : \"\";\r\n\r\nvar buttons = this.state.courses.map(\r\n  (name,x)=><a href=\"#\" class=\"myButton\" key={x}   onClick={()=>this.setState({show:true,courseName:name})}>{name}</a>)\r\n\r\n  const x = this.state.show?  <main>\r\n   <h1 style={{color:'blue',textAlign:'right '}}>{this.state.courseName}</h1>\r\n    <h5 className=\"choice-text\">{chooseText}</h5>\r\n    <div>\r\n                              <Calendar\r\n                            className=\"c1\"\r\n                            onChange={this.onChange}\r\n                            value={this.state.date}\r\n                            calendarType=\"Hebrew\"\r\n                            onClickDay={()=>{this.setState({showhours:true})}}\r\n                            />\r\n                            {showH}\r\n                            </div>\r\n                            <Button className=\"button-center mu-5\" onClick={()=>this.setState({show:false, showhours:false , showForm:false})}>back</Button>\r\n                            \r\n                            </main> \r\n                            : <div>\r\n                            {buttons}\r\n                              </div>;\r\n\r\n  return (\r\n    <main className='app'>\r\n\r\n\r\n      <img src={logo} className='logo' alt=\"Zoomate\" ></img>\r\n      <div>\r\n      <MyTextbox ></MyTextbox>\r\n      </div>\r\n      <div className='center'>\r\n      {x}\r\n     </div>\r\n    </main>\r\n    \r\n  );\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}